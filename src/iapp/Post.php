<?php
/**
 * Author: Amir Hossein Jahani | iAmir.net
 * Last modified: 2/2/21, 8:25 PM
 * Copyright (c) 2021. Powered by iamir.net
 */

namespace iLaravel\iPost\iApp;


use iLaravel\Core\iApp\Http\Requests\iLaravel as Request;

class Post extends \iLaravel\Core\iApp\Post
{
    use \iLaravel\iPost\iApp\Traits\Model;
    public static $find_names = ['slug'];
    protected static $post_type = 'post';
    public $metaKeyName = 'post_id';

    public $files = ['image'];
    public $check_content = 'content';


    protected static function boot()
    {
        parent::boot();
        static::iPostBoot();
    }

    public function creator()
    {
        return $this->belongsTo(imodal('User'));
    }

    public function attachments()
    {
        return $this->belongsToMany(imodal('Attachment'), 'posts_attachments', 'post_id');
    }

    public function terms()
    {
        return $this->belongsToMany(imodal('Term'), 'posts_terms', 'post_id');
    }

    public function tags()
    {
        return $this->belongsToMany(imodal('Tag'), 'posts_tags', 'post_id');
    }

    public function rules(Request $request, $action, $arg1 = null)
    {
        $rules = parent::rules($request, $action, $arg1);
        $additionalRules = [
            'image_file' => 'nullable|mimes:jpeg,jpg,png,gif|max:5120',
            'terms.*.value' => "nullable|exists_serial:Term",
            'tags.*' => "nullable",
            'attachments.galleries.uploads.*' => "nullable|mimes:jpeg,jpg,png,gif|max:5120",
            'attachments.galleries.deletes.*' => "nullable|exists_serial:Attachment",
        ];
        switch ($action) {
            case 'store':
            case 'update':
                unset($rules['creator_id']);
                $rules['slug'] = "nullable|slug:en,fa";
                $rules['order'] = "nullable|numeric|min:0";
                $rules['parent_id'] = "nullable|exists:post,id";
                $rules['content'] = 'nullable';
                $rules['status'] = 'nullable|in:' . join(',', iconfig("status." . static::$post_type . "s", iconfig('status.global')));
                $rules = array_merge($rules, $additionalRules);
            break;
            case 'additional':
                $rules = $additionalRules;
                break;
        }
        return $rules;
    }

    public function newQuery($connection = null)
    {
        return parent::newQuery($connection)->where('type', static::$post_type); // TODO: Change the autogenerated stub
    }
}
